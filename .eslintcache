[{"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\index.js":"1","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\App.js":"2","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\reportWebVitals.js":"3","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\Contact\\Contact.js":"4","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\WorkSlide\\WorkSlide.js":"5","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\Cv\\Cv.js":"6","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\Slide\\Slide.js":"7","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\serviceWorker.js":"8","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\PaintingSlide\\PaintingSlide.js":"9","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\DrawingSlide\\DrawingSlide.js":"10","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\Sculpture\\SculptureSlide.js":"11"},{"size":452,"mtime":1610335374800,"results":"12","hashOfConfig":"13"},{"size":2334,"mtime":1611264946778,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":273,"mtime":1610838883291,"results":"16","hashOfConfig":"13"},{"size":2466,"mtime":1610335375420,"results":"17","hashOfConfig":"13"},{"size":4653,"mtime":1611275696294,"results":"18","hashOfConfig":"13"},{"size":402,"mtime":1610335375298,"results":"19","hashOfConfig":"13"},{"size":5003,"mtime":1610335375010,"results":"20","hashOfConfig":"13"},{"size":2572,"mtime":1611265862734,"results":"21","hashOfConfig":"13"},{"size":2566,"mtime":1611265873029,"results":"22","hashOfConfig":"13"},{"size":2576,"mtime":1611265901819,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ikdf7q",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\index.js",[],["53","54"],"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\App.js",[],"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\reportWebVitals.js",[],"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\Contact\\Contact.js",[],"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\WorkSlide\\WorkSlide.js",["55","56","57"],"import React, { Component } from \"react\";\nimport Slide from \"../Slide/Slide\";\nimport Chimes from \"../../work.json\";\n\nclass WorkSlide extends Component {\n  // Setting our component's initial state\n  state = {\n    slideIndex: 0,\n    images: Chimes,\n    hide: {\n      display: \"none\"\n    },\n    show: {\n      display: \"block\"\n    },\n    page: this.props.name\n  };\n\nnextSlide = event => {\n  console.log(\"Next stlide\")\n  console.log(this.state.slideIndex);\n  console.log(this.state.slideIndex)\n    var slideCount = this.state.slideIndex + 1;\n    console.log(slideCount)\n    if (slideCount >= this.state.images.length ) {this.setState({ slideIndex: 0})}\n    else if (slideCount <= this.state.images.length -1 ) {this.setState({ slideIndex: slideCount})};\n  };\n\n  prevSlide = event => {\n    console.log(\"prev slide\")\n    console.log(this.state.slideIndex);\n    var slideCount = this.state.slideIndex - 1;\n    if (slideCount < 0) {\n      this.setState({ slideIndex: this.state.images.length -1})\n    }\n    else if (slideCount <= this.state.images.length) {\n      this.setState({ slideIndex: slideCount})\n    };\n  };\n\n  // When the component mounts, You can do what you want here\n  // componentDidMount() {\n  //   console.log(\"component did mounat\")\n  //   this.setState({ slideIndeximages: images})\n  // }\n\n  // Handles updating component state when the user types into an input field\n  // handleInputChange = event => {\n  //   const { name, value } = event.target;\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // };\n\n  render() {\n    return (\n      <>\n        <div className=\"slideshow-container\">\n          <div className=\"inner\">\n            {this.state.images.map(image => {\n                return <Slide image={image.image} key={image.id} caption={\"\"} slideNumber={(parseInt(image.id) + 1)  + \" / \" + this.state.images.length } style={(this.state.slideIndex == image.id) ? this.state.show: this.state.hide } />\n            })}\n          </div>\n\n          <a className=\"prev\" onClick={this.prevSlide}>&#10094;</a>\n          <a className=\"next\" onClick={this.nextSlide}>&#10095;</a>\n        </div>\n        <br />\n            {/* <div style=\"text-align:center\">\n                <span className=\"dot\" onclick=\"currentSlide(1)\"></span>\n                <span classNamer=\"dot\" onclick=\"currentSlide(2)\"></span>\n                <span className=\"dot\" onclick=\"currentSlide(3)\"></span>\n            </div> */}\n        </>\n      );\n    }\n  }\nexport default WorkSlide;",["58","59"],"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\Cv\\Cv.js",["60","61","62","63","64","65"],"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\Slide\\Slide.js",["66"],"import React from \"react\";\n\n//this cpmponent created a slide for each image\nfunction Slide(props) {\n  return (\n    <>\n      <div className=\"mySlides\" style={props.style}>\n        <img src={props.image} />\n        <div className=\"numbertext\">{props.slideNumber}</div>\n        <div className=\"text\">{props.caption}</div>\n      </div>\n      <div>{props.caption}</div>\n    </>\n  );\n}\n\nexport default Slide;","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\serviceWorker.js",[],"C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\PaintingSlide\\PaintingSlide.js",["67","68","69"],"import React, { Component } from \"react\";\r\nimport Slide from \"../Slide/Slide\";\r\nimport Paintings from \"../../paintings.json\";\r\n\r\nclass PaintingSlide extends Component {\r\n  // Setting our component's initial state\r\n  state = {\r\n    slideIndex: 0,\r\n    images: Paintings,\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    show: {\r\n      display: \"block\"\r\n    },\r\n    page: this.props.name\r\n  };\r\n\r\nnextSlide = event => {\r\n  console.log(\"Next stlide\")\r\n  console.log(this.state.slideIndex);\r\n  console.log(this.state.slideIndex)\r\n    var slideCount = this.state.slideIndex + 1;\r\n    console.log(slideCount)\r\n    if (slideCount >= this.state.images.length ) {this.setState({ slideIndex: 0})}\r\n    else if (slideCount <= this.state.images.length -1 ) {this.setState({ slideIndex: slideCount})};\r\n  };\r\n\r\n  prevSlide = event => {\r\n    console.log(\"prev slide\")\r\n    console.log(this.state.slideIndex);\r\n    var slideCount = this.state.slideIndex - 1;\r\n    if (slideCount < 0) {\r\n      this.setState({ slideIndex: this.state.images.length -1})\r\n    }\r\n    else if (slideCount <= this.state.images.length) {\r\n      this.setState({ slideIndex: slideCount})\r\n    };\r\n  };\r\n\r\n  // When the component mounts, You can do what you want here\r\n  // componentDidMount() {\r\n  //   console.log(\"component did mounat\")\r\n  //   this.setState({ slideIndeximages: images})\r\n  // }\r\n\r\n  // Handles updating component state when the user types into an input field\r\n  // handleInputChange = event => {\r\n  //   const { name, value } = event.target;\r\n  //   this.setState({\r\n  //     [name]: value\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"slideshow-container\">\r\n          <div className=\"inner paintings\">\r\n            {this.state.images.map(image => {\r\n                return <Slide image={image.image} key={image.id} caption={\"\"} slideNumber={(parseInt(image.id) + 1)  + \" / \" + this.state.images.length } style={(this.state.slideIndex == image.id) ? this.state.show: this.state.hide } />\r\n            })}\r\n          </div>\r\n\r\n          <a className=\"prev\" onClick={this.prevSlide}>&#10094;</a>\r\n          <a className=\"next\" onClick={this.nextSlide}>&#10095;</a>\r\n        </div>\r\n        <br />\r\n            {/* <div style=\"text-align:center\">\r\n                <span className=\"dot\" onclick=\"currentSlide(1)\"></span>\r\n                <span classNamer=\"dot\" onclick=\"currentSlide(2)\"></span>\r\n                <span className=\"dot\" onclick=\"currentSlide(3)\"></span>\r\n            </div> */}\r\n        </>\r\n      );\r\n    }\r\n  }\r\nexport default PaintingSlide;","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\DrawingSlide\\DrawingSlide.js",["70","71","72"],"import React, { Component } from \"react\";\r\nimport Slide from \"../Slide/Slide\";\r\nimport Drawings from \"../../drawings.json\";\r\n\r\nclass DrawingSlide extends Component {\r\n  // Setting our component's initial state\r\n  state = {\r\n    slideIndex: 0,\r\n    images: Drawings,\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    show: {\r\n      display: \"block\"\r\n    },\r\n    page: this.props.name\r\n  };\r\n\r\nnextSlide = event => {\r\n  console.log(\"Next stlide\")\r\n  console.log(this.state.slideIndex);\r\n  console.log(this.state.slideIndex)\r\n    var slideCount = this.state.slideIndex + 1;\r\n    console.log(slideCount)\r\n    if (slideCount >= this.state.images.length ) {this.setState({ slideIndex: 0})}\r\n    else if (slideCount <= this.state.images.length -1 ) {this.setState({ slideIndex: slideCount})};\r\n  };\r\n\r\n  prevSlide = event => {\r\n    console.log(\"prev slide\")\r\n    console.log(this.state.slideIndex);\r\n    var slideCount = this.state.slideIndex - 1;\r\n    if (slideCount < 0) {\r\n      this.setState({ slideIndex: this.state.images.length -1})\r\n    }\r\n    else if (slideCount <= this.state.images.length) {\r\n      this.setState({ slideIndex: slideCount})\r\n    };\r\n  };\r\n\r\n  // When the component mounts, You can do what you want here\r\n  // componentDidMount() {\r\n  //   console.log(\"component did mounat\")\r\n  //   this.setState({ slideIndeximages: images})\r\n  // }\r\n\r\n  // Handles updating component state when the user types into an input field\r\n  // handleInputChange = event => {\r\n  //   const { name, value } = event.target;\r\n  //   this.setState({\r\n  //     [name]: value\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"slideshow-container\">\r\n          <div className=\"inner drawings\">\r\n            {this.state.images.map(image => {\r\n                return <Slide image={image.image} key={image.id} caption={\"\"} slideNumber={(parseInt(image.id) + 1)  + \" / \" + this.state.images.length } style={(this.state.slideIndex == image.id) ? this.state.show: this.state.hide } />\r\n            })}\r\n          </div>\r\n\r\n          <a className=\"prev\" onClick={this.prevSlide}>&#10094;</a>\r\n          <a className=\"next\" onClick={this.nextSlide}>&#10095;</a>\r\n        </div>\r\n        <br />\r\n            {/* <div style=\"text-align:center\">\r\n                <span className=\"dot\" onclick=\"currentSlide(1)\"></span>\r\n                <span classNamer=\"dot\" onclick=\"currentSlide(2)\"></span>\r\n                <span className=\"dot\" onclick=\"currentSlide(3)\"></span>\r\n            </div> */}\r\n        </>\r\n      );\r\n    }\r\n  }\r\nexport default DrawingSlide;","C:\\Users\\Austin Wiley\\Desktop\\2021\\dev\\j-rajewski-website\\src\\components\\Sculpture\\SculptureSlide.js",["73","74","75"],"import React, { Component } from \"react\";\r\nimport Slide from \"../Slide/Slide\";\r\nimport Sculpures from \"../../sculptures.json\";\r\n\r\nclass SculptureSlide extends Component {\r\n  // Setting our component's initial state\r\n  state = {\r\n    slideIndex: 0,\r\n    images: Sculpures,\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    show: {\r\n      display: \"block\"\r\n    },\r\n    page: this.props.name\r\n  };\r\n\r\nnextSlide = event => {\r\n  console.log(\"Next stlide\")\r\n  console.log(this.state.slideIndex);\r\n  console.log(this.state.slideIndex)\r\n    var slideCount = this.state.slideIndex + 1;\r\n    console.log(slideCount)\r\n    if (slideCount >= this.state.images.length ) {this.setState({ slideIndex: 0})}\r\n    else if (slideCount <= this.state.images.length -1 ) {this.setState({ slideIndex: slideCount})};\r\n  };\r\n\r\n  prevSlide = event => {\r\n    console.log(\"prev slide\")\r\n    console.log(this.state.slideIndex);\r\n    var slideCount = this.state.slideIndex - 1;\r\n    if (slideCount < 0) {\r\n      this.setState({ slideIndex: this.state.images.length -1})\r\n    }\r\n    else if (slideCount <= this.state.images.length) {\r\n      this.setState({ slideIndex: slideCount})\r\n    };\r\n  };\r\n\r\n  // When the component mounts, You can do what you want here\r\n  // componentDidMount() {\r\n  //   console.log(\"component did mounat\")\r\n  //   this.setState({ slideIndeximages: images})\r\n  // }\r\n\r\n  // Handles updating component state when the user types into an input field\r\n  // handleInputChange = event => {\r\n  //   const { name, value } = event.target;\r\n  //   this.setState({\r\n  //     [name]: value\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"slideshow-container\">\r\n          <div className=\"inner sculptures\">\r\n            {this.state.images.map(image => {\r\n                return <Slide image={image.image} key={image.id} caption={\"\"} slideNumber={(parseInt(image.id) + 1)  + \" / \" + this.state.images.length } style={(this.state.slideIndex == image.id) ? this.state.show: this.state.hide } />\r\n            })}\r\n          </div>\r\n\r\n          <a className=\"prev\" onClick={this.prevSlide}>&#10094;</a>\r\n          <a className=\"next\" onClick={this.nextSlide}>&#10095;</a>\r\n        </div>\r\n        <br />\r\n            {/* <div style=\"text-align:center\">\r\n                <span className=\"dot\" onclick=\"currentSlide(1)\"></span>\r\n                <span classNamer=\"dot\" onclick=\"currentSlide(2)\"></span>\r\n                <span className=\"dot\" onclick=\"currentSlide(3)\"></span>\r\n            </div> */}\r\n        </>\r\n      );\r\n    }\r\n  }\r\nexport default SculptureSlide;",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":61,"column":185,"nodeType":"82","messageId":"83","endLine":61,"endColumn":187},{"ruleId":"84","severity":1,"message":"85","line":65,"column":11,"nodeType":"86","endLine":65,"endColumn":56},{"ruleId":"84","severity":1,"message":"85","line":66,"column":11,"nodeType":"86","endLine":66,"endColumn":56},{"ruleId":"76","replacedBy":"87"},{"ruleId":"78","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":97,"column":97,"nodeType":"86","endLine":97,"endColumn":193},{"ruleId":"89","severity":1,"message":"90","line":99,"column":90,"nodeType":"86","endLine":99,"endColumn":175},{"ruleId":"89","severity":1,"message":"90","line":105,"column":50,"nodeType":"86","endLine":105,"endColumn":136},{"ruleId":"89","severity":1,"message":"90","line":108,"column":70,"nodeType":"86","endLine":108,"endColumn":139},{"ruleId":"89","severity":1,"message":"90","line":111,"column":69,"nodeType":"86","endLine":111,"endColumn":139},{"ruleId":"89","severity":1,"message":"90","line":114,"column":70,"nodeType":"86","endLine":114,"endColumn":140},{"ruleId":"91","severity":1,"message":"92","line":8,"column":9,"nodeType":"86","endLine":8,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":61,"column":185,"nodeType":"82","messageId":"83","endLine":61,"endColumn":187},{"ruleId":"84","severity":1,"message":"85","line":65,"column":11,"nodeType":"86","endLine":65,"endColumn":56},{"ruleId":"84","severity":1,"message":"85","line":66,"column":11,"nodeType":"86","endLine":66,"endColumn":56},{"ruleId":"80","severity":1,"message":"81","line":61,"column":185,"nodeType":"82","messageId":"83","endLine":61,"endColumn":187},{"ruleId":"84","severity":1,"message":"85","line":65,"column":11,"nodeType":"86","endLine":65,"endColumn":56},{"ruleId":"84","severity":1,"message":"85","line":66,"column":11,"nodeType":"86","endLine":66,"endColumn":56},{"ruleId":"80","severity":1,"message":"81","line":61,"column":185,"nodeType":"82","messageId":"83","endLine":61,"endColumn":187},{"ruleId":"84","severity":1,"message":"85","line":65,"column":11,"nodeType":"86","endLine":65,"endColumn":56},{"ruleId":"84","severity":1,"message":"85","line":66,"column":11,"nodeType":"86","endLine":66,"endColumn":56},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["93"],["94"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]